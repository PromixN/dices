#include <glvar.hpp>

float cube_box[CUBE_NUM] = {
		-0.5f, -0.5f, -0.5f,  0.0f,  0.0f, -1.0f,
         0.5f, -0.5f, -0.5f,  0.0f,  0.0f, -1.0f,
         0.5f,  0.5f, -0.5f,  0.0f,  0.0f, -1.0f,
         0.5f,  0.5f, -0.5f,  0.0f,  0.0f, -1.0f,
        -0.5f,  0.5f, -0.5f,  0.0f,  0.0f, -1.0f,
        -0.5f, -0.5f, -0.5f,  0.0f,  0.0f, -1.0f,

        -0.5f, -0.5f,  0.5f,  0.0f,  0.0f,  1.0f,
         0.5f, -0.5f,  0.5f,  0.0f,  0.0f,  1.0f,
         0.5f,  0.5f,  0.5f,  0.0f,  0.0f,  1.0f,
         0.5f,  0.5f,  0.5f,  0.0f,  0.0f,  1.0f,
        -0.5f,  0.5f,  0.5f,  0.0f,  0.0f,  1.0f,
        -0.5f, -0.5f,  0.5f,  0.0f,  0.0f,  1.0f,

        -0.5f,  0.5f,  0.5f, -1.0f,  0.0f,  0.0f,
        -0.5f,  0.5f, -0.5f, -1.0f,  0.0f,  0.0f,
        -0.5f, -0.5f, -0.5f, -1.0f,  0.0f,  0.0f,
        -0.5f, -0.5f, -0.5f, -1.0f,  0.0f,  0.0f,
        -0.5f, -0.5f,  0.5f, -1.0f,  0.0f,  0.0f,
        -0.5f,  0.5f,  0.5f, -1.0f,  0.0f,  0.0f,

         0.5f,  0.5f,  0.5f,  1.0f,  0.0f,  0.0f,
         0.5f,  0.5f, -0.5f,  1.0f,  0.0f,  0.0f,
         0.5f, -0.5f, -0.5f,  1.0f,  0.0f,  0.0f,
         0.5f, -0.5f, -0.5f,  1.0f,  0.0f,  0.0f,
         0.5f, -0.5f,  0.5f,  1.0f,  0.0f,  0.0f,
         0.5f,  0.5f,  0.5f,  1.0f,  0.0f,  0.0f,

        -0.5f, -0.5f, -0.5f,  0.0f, -1.0f,  0.0f,
         0.5f, -0.5f, -0.5f,  0.0f, -1.0f,  0.0f,
         0.5f, -0.5f,  0.5f,  0.0f, -1.0f,  0.0f,
         0.5f, -0.5f,  0.5f,  0.0f, -1.0f,  0.0f,
        -0.5f, -0.5f,  0.5f,  0.0f, -1.0f,  0.0f,
        -0.5f, -0.5f, -0.5f,  0.0f, -1.0f,  0.0f,

        -0.5f,  0.5f, -0.5f,  0.0f,  1.0f,  0.0f,
         0.5f,  0.5f, -0.5f,  0.0f,  1.0f,  0.0f,
         0.5f,  0.5f,  0.5f,  0.0f,  1.0f,  0.0f,
         0.5f,  0.5f,  0.5f,  0.0f,  1.0f,  0.0f,
        -0.5f,  0.5f,  0.5f,  0.0f,  1.0f,  0.0f,
        -0.5f,  0.5f, -0.5f,  0.0f,  1.0f,  0.0f
	};
std::map<int, DL_Infactor> DLI_map= {
{7,     {1.0,   0.7,        1.8     }},
{13,    {1.0,   0.35,       0.44    }},
{12,    {1.0,   0.22,       0.2     }},
{32,    {1.0,   0.14,       0.07    }},
{50,    {1.0,   0.09,       0.032   }},
{65,    {1.0,   0.07,       0.017   }},
{100,   {1.0,   0.045,      0.0075  }},
{160,   {1.0,   0.027,      0.0025  }},
{200,   {1.0,   0.022,      0.0019  }},
{325,   {1.0,   0.014,      0.0007  }},
{600,   {1.0,   0.007,      0.0002  }},
{3250,  {1.0,   0.00014,    0.000007}}
};
float cube_vertices [CV_NUM]=
{
-1.0f,-1.0f,-1.0f,
-1.0f,-1.0f, 1.0f,
-1.0f, 1.0f,-1.0f,
1.0f,-1.0f,-1.0f,
-1.0f, 1.0f, 1.0f,
1.0f,-1.0f, 1.0f,
1.0f, 1.0f,-1.0f,
1.0f, 1.0f, 1.0f,
};
/*
         4---------------7
2---------------6        |       
|        |      |        |
|        |      |        |
|        1------|--------5
0--------------*3               
*/
unsigned int cube_faces [CF_NUM]=
{
0,2,4,1,
0,3,6,2,
0,1,5,3,
1,4,7,5,
3,5,7,6,
2,6,7,4
};
unsigned int cube_edges [CE_NUM]=
{
0,1,1,3,
1,4,1,4,
2,4,1,6,
0,2,1,2,
0,3,2,3,
1,5,3,4,
3,5,3,5,
4,7,4,6,
2,6,2,6,
6,7,5,6,
5,7,4,5,
3,6,2,5
};
float plane_vertices [PV_NUM]=
{
-1.0 , -1.0, -1.0,
1.0 , -1.0, -1.0,
-1.0 , -1.0,  1.0,
1.0 , -1.0,  1.0
};
unsigned int plane_faces[PF_NUM]=
{
0,1,3,2
};
int texture_num = 0;

std::vector<glm::vec3> magic_pos=
{

        glm::vec3(-2.0, -2.0, -2.0),
        glm::vec3(   0, -2.0, -2.0),
        glm::vec3( 2.0, -2.0, -2.0),
        glm::vec3(-2.0,    0, -2.0),
        glm::vec3(   0,    0, -2.0),
        glm::vec3( 2.0,    0, -2.0),
        glm::vec3(-2.0,  2.0, -2.0),
        glm::vec3(   0,  2.0, -2.0),
        glm::vec3( 2.0,  2.0, -2.0),
        
        glm::vec3(-2.0, -2.0,    0),
        glm::vec3(   0, -2.0,    0),
        glm::vec3( 2.0, -2.0,    0),
        glm::vec3(-2.0,    0,    0),
        glm::vec3(   0,    0,    0),
        glm::vec3( 2.0,    0,    0),
        glm::vec3(-2.0,  2.0,    0),
        glm::vec3(   0,  2.0,    0),
        glm::vec3( 2.0,  2.0,    0),


        glm::vec3(-2.0, -2.0,  2.0),
        glm::vec3(   0, -2.0,  2.0),
        glm::vec3( 2.0, -2.0,  2.0),
        glm::vec3(-2.0,    0,  2.0),
        glm::vec3(   0,    0,  2.0),
        glm::vec3( 2.0,    0,  2.0),
        glm::vec3(-2.0,  2.0,  2.0),
        glm::vec3(   0,  2.0,  2.0),
        glm::vec3( 2.0,  2.0,  2.0),
};
/*
r 0
g 1
b 2
w 3
o 4
y 5
{
                 3
             /     \
           /        \
          /        6  \   
         2               1
          \             /
           \ 5       /
              \    /
                 4       
}
 213504
*/
int texture_indecies[27][6]=
{
        {}
};
std::vector<glm::mat4> magic_rotate (27,glm::mat4(1.0));

cube_dsc_t cube_dsc ={magic_pos,magic_rotate}